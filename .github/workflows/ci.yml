name: CI

on: [pull_request, workflow_dispatch]

defaults:
  run:
    shell: bash -l -eo pipefail {0}

jobs:
#  alluxiocommon:
#    name: Build alluxiocommon
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    strategy:
#      fail-fase: false
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: '3.10'
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.platform.target }}
#          args: --release --out dist --find-interpreter --manifest-path rust/alluxiocommon/Cargo.toml
#          sccache: 'true'
#          manylinux: auto
#      - name: pytest
#        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
#        shell: bash
#        run: |
#          set -e
#          pip install alluxiocommon --find-links dist --force-reinstall
#          pip install pytest
#          pytest -vv \
#            --log-format="%(asctime)s %(levelname)s %(message)s" \
#            --log-date-format="%H:%M:%S" \
#          rust/alluxiocommon/tests/
#      - name: pytest
#        if: ${{ !startsWith(matrix.platform.target, 'x86') && matrix.platform.target != 'ppc64' }}
#        uses: uraimo/run-on-arch-action@v2.5.0
#        with:
#          arch: ${{ matrix.platform.target }}
#          distro: ubuntu22.04
#          githubToken: ${{ github.token }}
#          install: |
#            apt-get update
#            apt-get install -y --no-install-recommends python3 python3-pip
#            pip3 install -U pip pytest
#          run: |
#            set -e
#            pip3 install alluxiocommon --find-links dist --force-reinstall
#            cd /root/github/alluxiofs/rust/alluxiocommon && pytest

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8","3.9"]
        target: [x86_64]

    steps:
#      - name: Checkout source
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Conda Environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-downloads: true
          environment-file: environment_conda.yaml
          environment-name: alluxio_test
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Conda info
        run: |
          conda list
          conda --version

#      - name: Install openssl for AlluxioCommon Build
#        run: sudo apt-get install pkg-config libssl-dev

      # alluxiocommon related
      - name: Build alluxiocommon wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m rust/alluxiocommon/Cargo.toml
#          sccache: 'true'
          manylinux: auto

      - name: Install dependencies
        run: |
          pip install .[tests]

#      - name: Run AlluxioCommon tests
#        shell: bash
#        run: |
#          set -e
#          pip install alluxiocommon --find-links dist --force-reinstall
#          pip install pytest
#          pytest -vv \
#            --log-format="%(asctime)s %(levelname)s %(message)s" \
#            --log-date-format="%H:%M:%S" \
#          rust/alluxiocommon/tests/

      - name: Run Alluxio FileSystem tests
        run: |
          pytest -vv \
          --log-format="%(asctime)s %(levelname)s %(message)s" \
          --log-date-format="%H:%M:%S" \
          tests/

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: pre-commit/action@v3.0.0
